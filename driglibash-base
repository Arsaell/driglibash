###############################################################################
#                             Driglibash pack 1
#                 Usual helper functions for bash scripts
#               https://github.com/adrianamaglio/driglibash
###############################################################################

trap 'die "Received sigint"' INT

# Output on standard error output #
yell() {
  echo >&2 -e "$@"
}

# Print an error, clean and exit #
die() {
  yell "$@"
  clean
  exit 1
}

# Exit on error if not root #
root_or_die() {
  if [ "$UID" -ne 0 ] ; then
    die "You need to be root"
  fi
}

# Execute a command and die if it returns with error #
run() {
  "$@"
  code=$?
  [ $code -ne 0 ] && die "command [$*] failed with erro code $code"
}

# Clean exit #
# Record command lines passed as argument and execute them all when called without args #
# One argument = One command #
clean() {
  if [ "$#" -eq 0 ] ; then
    echo "Cleaning"
    for action in "${driglibash_clean_actions[@]}" ; do
      echo "> $action"
      $action
    done
  elif [ "$#" -eq 1 ] ; then
    tmp_array=()
    found=
    for i in "${!driglibash_clean_actions[@]}" ; do
      if [ "${driglibash_clean_actions[$i]}" == "$1" ] ; then
        unset driglibash_clean_actions[$i] 
        found=true
        break
      fi
    done
    
    if [ -z "$found" ] ; then driglibash_clean_actions+=("${1}") ; fi
  else
    die "Bad clean usage, receveid more than one arg"
  fi
}

# tells where your executable is (absolute path). Follow simlinks if any argument provided
where() {
  if [ -z "$1" ] ; then die "You need to supply some place for me to tell you where it is" ; fi
  if [ -z "$2" ] ; then
    echo "$( cd -P "$( dirname "$1" )" && pwd )"
  else
    SOURCE="$1"
    while [ -h "$SOURCE" ]; do # resolve $SOURCE until the file is no longer a symlink
      DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
      SOURCE="$(readlink "$SOURCE")"
      [[ $SOURCE != /* ]] && SOURCE="$DIR/$SOURCE" # if $SOURCE was a relative symlink, we need to resolve it relative to    
the path where the symlink file was located
    done
    DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
    
    echo $DIR
  fi  
}

